package com.dcap.filters;

import com.dcap.service.threads.FilterData;
import com.dcap.fileReader.DataFile;
import com.dcap.service.threads.FilterData;

import java.util.List;
import java.util.Map;

/**
 * @author uli
 */
public interface IDataFilter {



	/**
	 * function that returns the name of the Filter
	 * @return mame
	 */
	String getName();

	/**
	 * function that return the columns that are the input for the filter. String is the name of the column how it should be callec,
	 * the value is the name of the column in the csv
	 * @return map with filters <name of the column in the experiment, name of the column in the csv file>
	 */
	Map<String, String> getColumns();

	/**
	 * returns the description of the parameters that are needed as input. Returns the mame of the parameter as key and the type as value
	 * @return list of required parameters
	 */
	Map<String, ENUMERATED_TYPES> getRequiredParameters();


	/**
	 * Runs the filter.
	 *
	 * @param data list of data
	 * @return additional information generated by the filter to be displayed to the user.
	 * @throws Exception
	 *             if something goes wrong
	 */
	List<FilterData> run(List<FilterData> data) throws Exception;

	String getTimeStampColumn();

	Boolean isPreprocessing();
}
